<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
         currentState="{model.viewState}"
         backgroundColor.loading="0xeeeeee" xmlns:parsley="http://www.spicefactory.org/parsley">
    
    <fx:Metadata>
        [DefaultProperty("nodes")]
    </fx:Metadata>
    
    <fx:Script>
        <![CDATA[
            import com.bluecallisto.parsley.model.TreeNodePM;
            
            import config.TreeNodeConfig;
            
            import mx.events.EffectEvent;
            import mx.events.FlexEvent;
            
            [Bindable]
            public var model:TreeNodePM;
            
            [Bindable]
            private var _nodes:Array;
            
            public function set nodes(value:Array):void
            {
                _nodes = value;
            }
            
            protected function refreshButton_clickHandler(event:MouseEvent):void
            {
                model.askForRefresh(scopeRadioButtonGroup.selection.label);
            }
            
            protected function loading_effectEndHandler(event:EffectEvent):void
            {
                model.viewRefreshed();
            }
            
        ]]>
    </fx:Script>
    <fx:Declarations>
        <parsley:FastInject type="{TreeNodePM}" property="model" />
        <s:RadioButtonGroup id="scopeRadioButtonGroup" />
    </fx:Declarations>
    
    <s:states>
        <s:State name="default" />
        <s:State name="loading" />
    </s:states>
    
    <s:transitions>
        <s:Transition fromState="loading" toState="default">
            <s:AnimateColor colorPropertyName="backgroundColor" target="{this}" duration="600" />
        </s:Transition>
        <s:Transition fromState="default" toState="loading">
            <s:AnimateColor colorPropertyName="backgroundColor" target="{this}" duration="600"
                            effectEnd="loading_effectEndHandler(event)"/>
        </s:Transition>
    </s:transitions>
    
    <s:layout>
        <s:VerticalLayout horizontalAlign="center"/>
    </s:layout>
    
    <s:RadioButton label="global" group="{scopeRadioButtonGroup}" selected="true"/>
    
    <s:RadioButton label="custom" group="{scopeRadioButtonGroup}" />
    
    <s:RadioButton label="local" group="{scopeRadioButtonGroup}" />
    
    <s:Button id="refreshButton" label="Refresh"
              click="refreshButton_clickHandler(event)"/>
    
    <s:HGroup id="nodesContainer" gap="100" mxmlContent="{_nodes}"/>
</s:Panel>
